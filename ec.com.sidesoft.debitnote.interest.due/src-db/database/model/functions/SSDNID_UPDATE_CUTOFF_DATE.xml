<?xml version="1.0"?>
  <database name="FUNCTION SSDNID_UPDATE_CUTOFF_DATE">
    <function name="SSDNID_UPDATE_CUTOFF_DATE" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
	v_ResultStr VARCHAR2(2000):='';
	v_Message TEXT:=''; --OBTG:VARCHAR2--
	-- Parameter
	CurParameter RECORD;
	vRecordID VARCHAR2(32);
	-- Variables
	vRecord RECORD;
	vYear NUMBER;
	vMonth NUMBER;
	vLastDayMonth NUMBER;
	vCutoffDate VARCHAR2(10);
BEGIN
	-- Update AD_PInstance
	DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID);
	v_ResultStr:='PInstanceNotFound';
 AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL);
	
	BEGIN -- BODY
    	-- Begin Get Parameters
		v_ResultStr:='ReadingParameters';
		FOR CurParameter IN (
			SELECT i.Record_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
			FROM AD_PInstance i
				JOIN AD_PInstance_Para p ON i.AD_PInstance_ID=p.AD_PInstance_ID
			WHERE i.AD_PInstance_ID=PInstance_ID
			ORDER BY p.SeqNo
		) LOOP
			vRecordID := CurParameter.Record_ID;
		END LOOP;
		DBMS_OUTPUT.PUT_LINE('	vRecordID=' || vRecordID);
		-- Finish Get Parameter
		
		--<<BEGIN_PROCESS>>
		
		FOR vRecord IN (
			SELECT ps.*, bp.em_ssdnid_pay_day, i.dateinvoiced
			FROM fin_payment_schedule ps
				JOIN c_invoice i ON i.c_invoice_id=ps.c_invoice_id
				JOIN c_bpartner bp ON bp.c_bpartner_id=i.c_bpartner_id
			WHERE i.issotrx='Y'
		) LOOP
			IF vRecord.em_ssdnid_pay_day IS NOT NULL THEN
				vYear := EXTRACT(YEAR FROM vRecord.expecteddate);
				vMonth := EXTRACT(MONTH FROM vRecord.expecteddate);
				vLastDayMonth := EXTRACT(DAY FROM LAST_DAY(vRecord.expecteddate));

				vCutoffDate := vYear||'-'||vMonth||'-';

				IF vRecord.em_ssdnid_pay_day > vLastDayMonth THEN
					vCutoffDate := vCutoffDate||vLastDayMonth;
				ELSE
					vCutoffDate := vCutoffDate||vRecord.em_ssdnid_pay_day;
				END IF;

				UPDATE fin_payment_schedule SET em_ssdnid_cutoff_date=CASE WHEN vCutoffDate::DATE < vRecord.dateinvoiced::DATE
					THEN  vCutoffDate::TIMESTAMP + interval '1 month'
					ELSE vCutoffDate::TIMESTAMP END
				WHERE fin_payment_schedule_id=vRecord.fin_payment_schedule_id;
			ELSE
				UPDATE fin_payment_schedule SET em_ssdnid_cutoff_date=vRecord.expecteddate WHERE fin_payment_schedule_id=vRecord.fin_payment_schedule_id;
			END IF;
		END LOOP;
		
		--<<FINISH_PROCESS>>
		
		-- Update AD_PInstance
		DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message);
	 AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', CASE WHEN v_Message = '' THEN 1 ELSE 2 END, v_Message);
		RETURN;
	END; -- BODY
	EXCEPTION
	WHEN OTHERS THEN
	v_ResultStr:= '@ERROR='||SQLERRM;
	DBMS_OUTPUT.PUT_LINE( v_ResultStr) ;
 AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
	RETURN;
END SSDNID_UPDATE_CUTOFF_DATE
]]></body>
    </function>
  </database>
